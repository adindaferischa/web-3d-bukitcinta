{"mappings":"CCKC,AAAA,WA8CC,SAAS,EAAsB,CAAQ,CAAE,CAAM,CAAE,CAAQ,EACvD,MAAM,EAAQ,CACZ,OAAQ,OACR,KAAM,EACN,QAAS,CAAC,mBAAoB,gBAAgB,CAChD,GACC,IAAI,CAAC,AAAA,IACJ,GAAI,EAAS,EAAE,CACb,OAAO,EAAS,IAAI,EAEpB,OAAM,AAAI,MAAM,CAAC,EAAE,EAAS,MAAM,CAAC,CAAC,EAAE,EAAS,UAAU,CAAC,CAAC,EAAE,EAAS,GAAG,CAAC,CAAC,CAE/E,GACC,IAAI,CAAC,AAAA,IAEJ,GADA,EAAS,aAAa,CAAC,YAAY,SAAS,CAAC,MAAM,CAAC,WAChD,AAAe,MAAf,EAAK,IAAI,GACX,EAAS,aAAa,CAAC,iBAAiB,SAAS,CAAC,GAAG,CAAC,WACtD,EAAS,KAAK,QAEd,MAAM,AAAI,MAAM,GAAc,8DAAgE,EAElG,GACC,KAAK,CAAC,AAAC,IACN,EAAa,EAAU,EACzB,EACF,CAEA,SAAS,EAAa,CAAQ,CAAE,CAAK,EACnC,EAAS,aAAa,CAAC,YAAY,SAAS,CAAC,MAAM,CAAC,WACpD,EAAS,aAAa,CAAC,kBAAkB,SAAS,CAAG,EACrD,EAAS,aAAa,CAAC,kBAAkB,SAAS,CAAC,GAAG,CAAC,UACzD,CAxEA,AAFY,SAAS,gBAAgB,CAAC,mBAEhC,OAAO,CAAE,SAAS,CAAC,EACvB,EAAE,gBAAgB,CAAC,SAAU,SAAS,CAAK,EACzC,EAAM,cAAc,GAEpB,IAAI,EAAW,IAAI,CAEf,EAAS,EAAS,YAAY,CAAC,UAC/B,EAAY,EAAS,YAAY,CAAC,2BAEtC,GAAI,CAAE,EAAS,CACb,EAAa,EAAU,wCACvB,MACF,CACA,EAAS,aAAa,CAAC,YAAY,SAAS,CAAC,GAAG,CAAC,WACjD,EAAS,aAAa,CAAC,kBAAkB,SAAS,CAAC,MAAM,CAAC,WAC1D,EAAS,aAAa,CAAC,iBAAiB,SAAS,CAAC,MAAM,CAAC,WAEzD,IAAI,EAAW,IAAI,SAAU,GAExB,EACA,AAAsB,aAAtB,OAAO,WACR,WAAW,KAAK,CAAC,WACf,GAAI,CACF,WAAW,OAAO,CAAC,EAAW,CAAC,OAAQ,uBAAuB,GAC7D,IAAI,CAAC,AAAA,IACJ,EAAS,GAAG,CAAC,qBAAsB,GACnC,EAAsB,EAAU,EAAQ,EAC1C,EACF,CAAE,MAAM,EAAO,CACb,EAAa,EAAU,EACzB,CACF,GAEA,EAAa,EAAU,mDAGzB,EAAsB,EAAU,EAAQ,EAE5C,EACF,EAmCF","sources":["<anon>","src/assets/vendor/php-email-form/validate.js"],"sourcesContent":["var $8dc568e81f77bb83$exports = {};\n/**\r\n* PHP Email Form Validation - v3.7\r\n* URL: https://bootstrapmade.com/php-email-form/\r\n* Author: BootstrapMade.com\r\n*/ (function() {\n    \"use strict\";\n    let forms = document.querySelectorAll(\".php-email-form\");\n    forms.forEach(function(e) {\n        e.addEventListener(\"submit\", function(event) {\n            event.preventDefault();\n            let thisForm = this;\n            let action = thisForm.getAttribute(\"action\");\n            let recaptcha = thisForm.getAttribute(\"data-recaptcha-site-key\");\n            if (!action) {\n                displayError(thisForm, \"The form action property is not set!\");\n                return;\n            }\n            thisForm.querySelector(\".loading\").classList.add(\"d-block\");\n            thisForm.querySelector(\".error-message\").classList.remove(\"d-block\");\n            thisForm.querySelector(\".sent-message\").classList.remove(\"d-block\");\n            let formData = new FormData(thisForm);\n            if (recaptcha) {\n                if (typeof grecaptcha !== \"undefined\") grecaptcha.ready(function() {\n                    try {\n                        grecaptcha.execute(recaptcha, {\n                            action: \"php_email_form_submit\"\n                        }).then((token)=>{\n                            formData.set(\"recaptcha-response\", token);\n                            php_email_form_submit(thisForm, action, formData);\n                        });\n                    } catch (error) {\n                        displayError(thisForm, error);\n                    }\n                });\n                else displayError(thisForm, \"The reCaptcha javascript API url is not loaded!\");\n            } else php_email_form_submit(thisForm, action, formData);\n        });\n    });\n    function php_email_form_submit(thisForm, action, formData) {\n        fetch(action, {\n            method: \"POST\",\n            body: formData,\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            }\n        }).then((response)=>{\n            if (response.ok) return response.text();\n            else throw new Error(`${response.status} ${response.statusText} ${response.url}`);\n        }).then((data)=>{\n            thisForm.querySelector(\".loading\").classList.remove(\"d-block\");\n            if (data.trim() == \"OK\") {\n                thisForm.querySelector(\".sent-message\").classList.add(\"d-block\");\n                thisForm.reset();\n            } else throw new Error(data ? data : \"Form submission failed and no error message returned from: \" + action);\n        }).catch((error)=>{\n            displayError(thisForm, error);\n        });\n    }\n    function displayError(thisForm, error) {\n        thisForm.querySelector(\".loading\").classList.remove(\"d-block\");\n        thisForm.querySelector(\".error-message\").innerHTML = error;\n        thisForm.querySelector(\".error-message\").classList.add(\"d-block\");\n    }\n})();\n\n\n//# sourceMappingURL=index.85e346a4.js.map\n","/**\r\n* PHP Email Form Validation - v3.7\r\n* URL: https://bootstrapmade.com/php-email-form/\r\n* Author: BootstrapMade.com\r\n*/\r\n(function () {\r\n  \"use strict\";\r\n\r\n  let forms = document.querySelectorAll('.php-email-form');\r\n\r\n  forms.forEach( function(e) {\r\n    e.addEventListener('submit', function(event) {\r\n      event.preventDefault();\r\n\r\n      let thisForm = this;\r\n\r\n      let action = thisForm.getAttribute('action');\r\n      let recaptcha = thisForm.getAttribute('data-recaptcha-site-key');\r\n      \r\n      if( ! action ) {\r\n        displayError(thisForm, 'The form action property is not set!');\r\n        return;\r\n      }\r\n      thisForm.querySelector('.loading').classList.add('d-block');\r\n      thisForm.querySelector('.error-message').classList.remove('d-block');\r\n      thisForm.querySelector('.sent-message').classList.remove('d-block');\r\n\r\n      let formData = new FormData( thisForm );\r\n\r\n      if ( recaptcha ) {\r\n        if(typeof grecaptcha !== \"undefined\" ) {\r\n          grecaptcha.ready(function() {\r\n            try {\r\n              grecaptcha.execute(recaptcha, {action: 'php_email_form_submit'})\r\n              .then(token => {\r\n                formData.set('recaptcha-response', token);\r\n                php_email_form_submit(thisForm, action, formData);\r\n              })\r\n            } catch(error) {\r\n              displayError(thisForm, error);\r\n            }\r\n          });\r\n        } else {\r\n          displayError(thisForm, 'The reCaptcha javascript API url is not loaded!')\r\n        }\r\n      } else {\r\n        php_email_form_submit(thisForm, action, formData);\r\n      }\r\n    });\r\n  });\r\n\r\n  function php_email_form_submit(thisForm, action, formData) {\r\n    fetch(action, {\r\n      method: 'POST',\r\n      body: formData,\r\n      headers: {'X-Requested-With': 'XMLHttpRequest'}\r\n    })\r\n    .then(response => {\r\n      if( response.ok ) {\r\n        return response.text();\r\n      } else {\r\n        throw new Error(`${response.status} ${response.statusText} ${response.url}`); \r\n      }\r\n    })\r\n    .then(data => {\r\n      thisForm.querySelector('.loading').classList.remove('d-block');\r\n      if (data.trim() == 'OK') {\r\n        thisForm.querySelector('.sent-message').classList.add('d-block');\r\n        thisForm.reset(); \r\n      } else {\r\n        throw new Error(data ? data : 'Form submission failed and no error message returned from: ' + action); \r\n      }\r\n    })\r\n    .catch((error) => {\r\n      displayError(thisForm, error);\r\n    });\r\n  }\r\n\r\n  function displayError(thisForm, error) {\r\n    thisForm.querySelector('.loading').classList.remove('d-block');\r\n    thisForm.querySelector('.error-message').innerHTML = error;\r\n    thisForm.querySelector('.error-message').classList.add('d-block');\r\n  }\r\n\r\n})();\r\n"],"names":["php_email_form_submit","thisForm","action","formData","fetch","method","body","headers","then","response","ok","text","Error","status","statusText","url","data","querySelector","classList","remove","trim","add","reset","catch","error","displayError","innerHTML","forms","document","querySelectorAll","forEach","e","addEventListener","event","preventDefault","getAttribute","recaptcha","FormData","grecaptcha","ready","execute","token","set"],"version":3,"file":"index.85e346a4.js.map"}